#pragma checksum "C:\Users\PC\Desktop\FFGoesWeb\Src\WebUI\Views\Guide\About.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "71658207173cafd5da0ac29dfcf58403ab7b43ee"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Guide_About), @"mvc.1.0.view", @"/Views/Guide/About.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\PC\Desktop\FFGoesWeb\Src\WebUI\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\PC\Desktop\FFGoesWeb\Src\WebUI\Views\_ViewImports.cshtml"
using WebUI.Areas.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\PC\Desktop\FFGoesWeb\Src\WebUI\Views\_ViewImports.cshtml"
using Domain.Entities.Common;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\PC\Desktop\FFGoesWeb\Src\WebUI\Views\_ViewImports.cshtml"
using Application.GameCQ.Monsters.Queries.GetAllMonstersQuery;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"71658207173cafd5da0ac29dfcf58403ab7b43ee", @"/Views/Guide/About.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"72de99cefb048e3e38636f6b45588b33a393a074", @"/Views/_ViewImports.cshtml")]
    public class Views_Guide_About : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_WorldNavBar", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Unit", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Create", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Warrior-Icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Warrior"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("60"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("60"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Rogue-Icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Rogue"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Hunter-Icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Hunter"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/MageIcon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Mage"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Druid-Icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Naturalist"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Necroid-Icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Necroid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Paladin-Icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Paladin"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Priest-Icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Priest"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Shaman-Icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Shaman"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_Footer", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("primary-background-color"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\r\n\r\n<html class=\"primary-background-color\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71658207173cafd5da0ac29dfcf58403ab7b43ee12690", async() => {
                WriteLiteral("\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n    <title>Guide</title>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "71658207173cafd5da0ac29dfcf58403ab7b43ee13046", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71658207173cafd5da0ac29dfcf58403ab7b43ee14932", async() => {
                WriteLiteral(@"
    <div class=""has-text-align-center"">
        <h1 class=""secondary-font-color"">Welcome to the Main Guide!</h1>
        <div class=""item-padding"">
            <hr />
            <p class=""has-large-font-size main-font-color"">
                Navigation : <a href=""#Game""><i class=""fas fa-gamepad""></i>Game</a>
                <a href=""#Social""><i class=""fas fa-users""></i>Social</a>
                <a href=""#Rules""><i class=""fas fa-exclamation-triangle""></i>Rules</a>
                <a href=""#Rewards""><i class=""fas fa-gem""></i>Rewards</a>
            </p>
            <hr />
        </div>
        <br />
        <div class=""aligncenter"">
            <div class=""item-padding aligncenter"">
                <p class=""has-large-font-size main-font-color""><i class=""fas fa-book main-font-color""></i> Main Information</p>
                <hr />
                <p class=""main-font-color has-normal-font-size"">
                    Before we jump into any kind of information about the game itself, it woul");
                WriteLiteral(@"d be nice
                    if we would know something about the website as a construct/project. <b>Final Fantasy Tryout</b>
                    in it's origin was just a simple console application, that used to be an exercise for the developer's
                    programming courses. The project start date was July / 2019 and it's development process was about 2-3 months.
                    But the project was actually far from done. After a while, it Merged into <b>Final Fantasy Tryout Goes Web</b>(FF Goes Web for short)
                    by adding website functionality and some actual visualization of the game content. At this state, the game is just a fan-reproduction of the first
                    expansion of Final Fantasy, but there is a lot of distinctive content that wait's to see light. Like Final Fantasy, this game type is RPG, but with an
                    integrated <a href=""#Socail""><em>Social System</em></a>, which means its something like a Gaming Facebook(not really though).");
                WriteLiteral(@" The graphical content currently
                    is NOT my possession and is NOT used for commercial uses, but as mentioned above, content will be added.
                </p>
            </div>
            <br />
            <div id=""Game"" class=""item-padding"">
                <p class=""has-large-font-size main-font-color""><i class=""fas fa-book main-font-color""></i> Game Guide</p>
                <hr />
                <p class=""has-normal-font-size main-font-color"">
                    Sweet! We can finally see what the game is actually about after all that reading(I know you haven't read anything from above).
                    In order to that, we must segregate the content into a few categories : <a href=""#Basics""><em>Basics</em></a>,
                    <a href=""#Spells""><em>Spells</em></a>,
                    <a href=""#Classes""><em>Classes</em></a>,
                    <a href=""#Items""><em>Items</em></a>,
                    <a href=""#Crafting""><em>Crafting</em></a>,
               ");
                WriteLiteral(@"     <a href=""#PvP""><em>PvP</em></a>,
                    <a href=""#Shops""><em>Shops and Auctions</em></a> and some sneakpeaks to the
                    <a href=""#FutureContent""><em>Future Content</em></a>.
                </p>
                <br />
                <div id=""Basics"" class=""item-padding"">
                    <p class=""has-large-font-size main-font-color""><i class=""fas fa-file main-font-color""></i> Basics</p>
                    <hr />
                    <div>
                        <p class=""has-normal-font-size main-font-color"">
                            Great! We are finally getting to the fun part! The game logic is made to be as simple as a rock : you hit, you get hit, and you try to
                            kill before you get killed. These actions happen every Turn since the game is Turn-Based. In order to experience this marvelous joy (without animations and awesome graphics tho...),
                            you must ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71658207173cafd5da0ac29dfcf58403ab7b43ee19417", async() => {
                    WriteLiteral("<em>Create</em>");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@" a Hero.
                            Explained in details, a Hero has <i class=""far fa-heart secondary-font-color"">Health</i>,
                            <i class=""fas fa-diagnoses secondary-font-color"">Mana</i>, <i class=""fas fa-khanda secondary-font-color"">Attack Power</i>,
                            <i class=""fas fa-magic secondary-font-color"">Magic Power</i>, <i class=""fas fa-shield-alt secondary-font-color"">Armor</i>,
                            <i class=""fas fa-hat-wizard secondary-font-color"">Magical Ressistance</i>, <i class=""fas fa-heartbeat secondary-font-color"">Health Regeneration</i>,
                            <i class=""fas fa-hand-holding-water secondary-font-color"">Mana Regeneration</i>, <i class=""fas fa-certificate secondary-font-color"">Level</i>,
                            <i class=""fab fa-gripfire secondary-font-color"">Critical Chance</i>,  <i class=""fas fa-coins secondary-font-color"">Gold</i> and
                            <i class=""fas fa-bolt secondary-font-color"">Energy</i>
");
                WriteLiteral(@"                            <br />
                            It's obvious that you need health to live and that health regeneration recovers health, but let's jump into some details about each attribute:
                            <ul class=""item-padding"" style=""list-style:none"">
                                <li class=""has-normal-font-size main-font-color"">
                                    <i class=""far fa-heart main-font-color"">Health</i> is Regenerated every turn in Battle and every 4 minutes out of Battle by 10%.
                                    When your Health reaches zero, you Die and lose half of your Gold. You can use various
                                    <a href=""#Consumeables""><em>Consumeable Items</em></a> in order to regen health exclusively. 
                                    The Primary Stat for Health is Stamina.
                                    <hr />
                                </li>
                                <li class=""item-padding has-normal-font-s");
                WriteLiteral(@"ize  main-font-color"">
                                    <i class=""fas fa-diagnoses main-font-color"">Mana</i> is Regenerated every turn in Battle and every 4 minutes out of Battle by 10%.
                                    Mana is used to cast <a href=""#Spells""><em>Spells</em></a>. Note that Spells can do both Physical and Magical Damage depending on your stats.
                                    The Primary Stat for Mana is Intellect and the Primary Stat for Mana Regeneration is Spirit.
                                    <hr />
                                </li>
                                <li class=""item-padding has-normal-font-size  main-font-color"">
                                    <i class=""fas fa-khanda main-font-color"">Attack Power</i> is used to deal Physical Damage to your Enemy.
                                    As the formula follows : Your Attack - Enemy's Armor = Damage Dealt.
                                    The Primary Stats for Attack Power are Strength and Agility");
                WriteLiteral(@".
                                    <hr />
                                </li>
                                <li class=""item-padding has-normal-font-size  main-font-color"">
                                    <i class=""fas fa-magic main-font-color"">Magic Power</i> is used to deal Magical Damage to your Enemy.
                                    Same as your Attack but : Your Magic Power - Enemy's Ressistance = Damage Dealt.
                                    The Primary Stat for Magic Power is Intellect.
                                    <hr />
                                </li>
                                <li class=""item-padding has-normal-font-size main-font-color"">
                                    <i class=""fas fa-shield-alt main-font-color"">Armor</i> is used to Protect yourself from Physical Damage.
                                    Something like this : Enemy's Attack - Your Armor = Damage Taken (with protection).
                                    Important! If your Arm");
                WriteLiteral(@"or is higher than the Enemy's Attack, you will Block the Attack, meaming you won't recieve any Damage from it.
                                    This also means that your Current Armor will be decreased by a percent.
                                    <hr />
                                </li>
                                <li class=""item-padding has-normal-font-size main-font-color"">
                                    <i class=""fas fa-hat-wizard main-font-color"">Magical Ressistance</i> is used to Protect yourself from Magical Damage.
                                    Like the Armor but a little different : Enemy's Magic Power - Your Ressistance = Damage Taken (with protection).
                                    Important! If your Ressistance is higher than the Enemy's Magic Power, you will Absorb the Spell, meaming you won't recieve any Damage from it.
                                    This also means that your Current Ressistance will be decreased by a percent.
                       ");
                WriteLiteral(@"             <hr />
                                </li>
                                <li class=""item-padding has-normal-font-size main-font-color"">
                                    <i class=""fas fa-certificate main-font-color"">Level</i> determines your Hero's Power.
                                    A Level is achieved when a XP condition is satisfied (when you have more experience than your current maximum).
                                    Any bonus XP points for the previous Level will be added to the next, example : I have 90 points, I am Level 1 and I need 10 more to Level Up!
                                    I Kill a Monster that rewards me 13 XP points, which means that I will be Level 2 with 3 XP points.
                                    In addition : Every time you Level Up you will have the opportunity to choose following points : Strength, Intellect, Spirit, Stamina or Agility.
                                    You can find more information about the following stats in t");
                WriteLiteral(@"he <a href=""#Items""><em>Items</em></a> section.
                                    <hr />
                                </li>
                                <li class=""item-padding has-normal-font-size main-font-color"">
                                    <i class=""fab fa-gripfire main-font-color"">Critical Chance</i> is the persistency of landing a Critical Strike.
                                    A Critical Strike deals Double the Damage of the initial Attack.
                                    Note : Only Normal Attacks can Crit. For now.
                                    The Primary Stat for Critical Chance is Agility.
                                    <hr />
                                </li>
                                <li class=""item-padding has-normal-font-size main-font-color"">
                                    <i class=""fas fa-coins main-font-color"">Gold</i> is the Main Currency of the game.
                                    It can be obtained through killing Monste");
                WriteLiteral(@"rs, Battling Players, Selling Items in the Shop / Auction e.t.c.
                                    It can be used as well buying various Items, which can increase your Hero Growth drastically.
                                    <hr />
                                </li>
                                <li class=""item-padding has-normal-font-size main-font-color"">
                                    <i class=""fas fa-bolt main-font-color"">Energy</i> is our last and one of the most valuable attributes.
                                    Without Energy, in short, you can't progress.
                                    There are 3 types of Energy : the Common Energy (the electric icon) which has 30 points and regenerates every 4 min,
                                    Crafting Energy (the hammer icon) which has 10 points and also regenerates every 4 min
                                    and PvP Energy (the raised fist icon) which has 15 points and regenerates every 8 min.
                       ");
                WriteLiteral(@"             In the next sections we will talk about Energies in bigger detail.
                                    <hr />
                                </li>
                            </ul>
                        </p>

                    </div>
                </div>
                <br />
                <div id=""Spells"" class=""item-padding"">
                    <p class=""has-large-font-size main-font-color""><i class=""fas fa-file main-font-color""></i> Spells</p>
                    <hr />
                    <p class=""has-normal-font-size main-font-color"">
                        Spells are the reason you have Mana : Dealing tons of damage in one hit, Healing yourself constantly or just making the
                        Enemy's Attacks absolutely ineffective. There are a few Main Spell Types : Damage Spells (dividing into Physical and Magical),
                        Healing Spells and Buffs. Damage Spells have the same purpose as Normal Attacks, Healing Spells speak for themselves, b");
                WriteLiteral(@"ut what about
                        Buffs? Well, Buffs can be explained pretty simple : They increase one (or more) of your Primary Attributes values for the rest of the fight.
                        Buffs (Like Damage and Healing Spells) are standalone Spells that require Mana to cast.
                        In addition each Spell can have an Effect that occurs when the Spell is casted.
                        Effects can have the same purpose as Damage Spells, Healing Spells or Buffs, but their effectiveness is comparatively lower in order to keep
                        everything balanced. Buffs and Effects can have possitive and negative (DeBuffs / Negative Effects) side which can target either you, or your Enemy.
                        Note that NOT all Spells require Mana and some of them even require different Attributes as casting Resource.
                    </p>
                </div>
                <br />
                <div id=""Classes"" class=""item-padding"">
                   ");
                WriteLiteral(@" <p class=""has-large-font-size main-font-color""><i class=""fas fa-file main-font-color""></i> Classes</p>
                    <hr />
                    <p class=""has-normal-font-size main-font-color"">
                        Classes are the diversity of your Hero with the following factors included :
                        Damage Contribution, Durability Contribution, Utility Contribution, Types of Equipment (<a href=""#Items""><em>Items</em></a>) and so on.
                        Currently, there are 9 Classes, but in the future more will be included (and the current will be modified).
                        They are designed in a way that there isn't a specific way of playing them (they basically don't have a META).
                        Long story short, you have a choice of playing your favourite class with at least 2 varieties of play style!
                        Without further ado, lets meet our Classes :
                        <ul class=""item-padding"" style=""list-style:none"">
          ");
                WriteLiteral("                  <li class=\"has-normal-font-size main-font-color\">\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71658207173cafd5da0ac29dfcf58403ab7b43ee32721", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <br />
                                Warrior
                                <br />
                                is your typical Physical Damage dealer : His main source of Damage comes from Normal Attacks, wears Metal Armor 
                                and he does not die fast. His Primary Stat is Stength. The Weapon that the Warrior uses is a Sword.
                                <hr />
                            </li>
                            <li class=""has-normal-font-size main-font-color"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71658207173cafd5da0ac29dfcf58403ab7b43ee34656", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <br />
                                Rogue
                                <br />
                                is a cunning assassin that deals mainly Physical Damage and wears Leather Armor. His Primary Stat is Agility. 
                                The Weapon that the Rogue uses is a Dagger.
                                <hr />
                            </li>
                            <li class=""has-normal-font-size main-font-color"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71658207173cafd5da0ac29dfcf58403ab7b43ee36531", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <br />
                                Hunter
                                <br />
                                is a swift ranger that mainly consists in Physical Damage dealing and wears Leather Armor. His Primary Stat is Agility.
                                The Weapon that the Hunter uses is a Bow.
                                <hr />
                            </li>
                            <li class=""has-normal-font-size main-font-color"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71658207173cafd5da0ac29dfcf58403ab7b43ee38415", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <br />
                                Mage
                                <br />
                                is a skillful sorcerer that deals Magic Damage and wears Cloth Armor. His Primary Stat is Intellect.
                                The Weapon that the Mage uses is a Staff.
                                <hr />
                            </li>
                            <li class=""has-normal-font-size main-font-color"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71658207173cafd5da0ac29dfcf58403ab7b43ee40279", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <br />
                                Naturalist
                                <br />
                                is the protector of the wild which does Magical Damage and Healing. Wears Leather Armor and
                                his Primary Stat is Spirit. The Weapon that the Naturalist uses is a Branch.
                                <hr />
                            </li>
                            <li class=""has-normal-font-size main-font-color"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71658207173cafd5da0ac29dfcf58403ab7b43ee42175", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <br />
                                Necroid
                                <br />
                                is the raiser of the dead which does Magical Damage and Healing. Wears Cloth Armor and his
                                Primary Stat is Intellect. The Weapon that the Necroid uses is a Skull.
                                <hr />
                            </li>
                            <li class=""has-normal-font-size main-font-color"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71658207173cafd5da0ac29dfcf58403ab7b43ee44062", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <br />
                                Paladin
                                <br />
                                is the guardian of the light which does Magical and Physical Damage, and also does Healing. Wears Metal Armor and
                                his Primary Stat is Strength. The Weapon that the Paladin uses is a Hammer.
                                <hr />
                            </li>
                            <li class=""has-normal-font-size main-font-color"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71658207173cafd5da0ac29dfcf58403ab7b43ee45976", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <br />
                                Priest 
                                <br />
                                is the invoker of light which does Physical Damage and Healing. Wears Cloth Armor and his
                                Primary Stat is Spirit. The Weapon that the Priest uses is a Staff.
                                <hr />
                            </li>
                            <li class=""has-normal-font-size main-font-color"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71658207173cafd5da0ac29dfcf58403ab7b43ee47858", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <br />
                                Shaman
                                <br />
                                is the elemental guide which does Physical and Magical Damage and also does Healing. Wears Metal Armor 
                                and his Primary Stat is Stamina.
                                <hr />
                            </li>
                        </ul>
                    </p>
                </div>
            </div>
        </div>
    </div>
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "71658207173cafd5da0ac29dfcf58403ab7b43ee49738", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_23.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_23);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<AppUser> UserManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
